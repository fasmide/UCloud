#!/usr/bin/env python3
import json
import sys
import subprocess
import os

if os.getuid() != 0:
    res = subprocess.run(['sudo', '-S', sys.argv[0], sys.argv[1]], stdin=open('/dev/null'))
    if res.returncode != 0:
        print("ucloud-extension failed. Is sudo misconfigured?")
        exit(1)
    exit(0)

request = json.loads(open(sys.argv[1]).read())
username: str = request['username']

local_username = username.replace('-', '').replace('#', '').replace('@', '')

response = {}

def lookup_user() -> int:
    id_result = subprocess.run(['/usr/bin/id', '-u', local_username], stdout=subprocess.PIPE)
    if id_result.returncode != 0:
        return None
    else:
        return int(id_result.stdout)

uid = lookup_user()
if uid != None:
    # User already exists. In that case we want to simply return the appropiate ID.
    response['uid'] = uid
    response['gid'] = uid # TODO(Dan): This is overly simplified
else:
    # We need to create a user.
    useradd_result = subprocess.run(['/usr/sbin/useradd', '-G', 'ucloud', '-m', local_username], stdout=subprocess.PIPE,
                                    stderr=subprocess.PIPE)
    if useradd_result.returncode != 0:
        print("Failed to create a user!")
        print(useradd_result.stdout)
        print(useradd_result.stderr)
        exit(1)
    
    uid = lookup_user()
    if uid == None:
        print("Failed to create a user! Could not look it up after calling useradd.")
        exit(1)

    response['uid'] = uid
    response['gid'] = uid

print(json.dumps(response))

